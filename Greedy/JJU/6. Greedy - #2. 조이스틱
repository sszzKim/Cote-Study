# 다음/이전 + 왼쪽/오른쪽 알고리즘으로 구현

# 다음/이전
# ABCDEFGHIJKLM(77)
# ZYXWVUTSRQPON(78)

# 왼쪽/오른쪽 -> 완전탐색/BFS/DFS ?
# 1. 오른쪽 (오른쪽 -> 왼쪽)
# 2. 왼쪽 (왼쪽 -> 오른쪽)
# 3. 오른쪽 -> 왼쪽
# 4. 왼쪽 -> 오른쪽
# A의 연속된 배열 중 가장 길이가 큰 배열을 찾는 것이 중요.
# 그 배열의 인덱스의 처음과 끝을 알면 왼쪽/오른쪽 풀기 가능
# A - MAAAAAAAN - Z
# N - ZA - M
# M - A × 2 + 1 + Z - N × 1 (오른쪽 -> 왼쪽)
# M - A × 1 + 2 + Z - N × 2 (왼쪽 -> 오른쪽)
# M - A (>=<) 1 + Z - N

# A(1) - MA(5)AAAAAA(11)N - Z(16)
# 4 < 6 -> 4 × 1 × 2

def solution(name):
    name = 'JJAJKKAAAHHHAA'
    name = list(name)
    name1 = list(name)
    
    # 다음/이전 구현
    # for i in name:
    # # i = 'W'
    #     if ord(i) <= 77:
    #         answer += ord(i) - ord('A')
    #     else:
    #         answer += ord('Z') - ord(i)
    
    # 왼쪽/오른쪽 -> AAA 배열 찾기. -> 스택/큐
    j = 0
    Alist = []
    m = 0
    n = 0
    while(name):
        x = name.pop(0)
        if x == 'A' and Alist == []:
            n +=1
            Alist.append([j,x])
            
        elif x == 'A' and j == (Alist[-1][0] + 1):
            n +=1
            Alist.append([j,x])
            
        elif x == 'A' and j != (Alist[-1][0] + 1):
            n +=1
            
            if m <= n:
                
            else:
                n = 1
        print(j, x, m, n)
        j += 1
    answer = Alist
    return answer
