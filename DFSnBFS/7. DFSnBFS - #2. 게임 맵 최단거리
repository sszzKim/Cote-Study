#BFS 풀이

# [1,0,1,1,1] # [0,0,0,0,0]
# [1,0,1,0,1] # [0,0,0,0,0]
# [1,0,1,1,1] # [0,0,0,0,0]
# [1,1,1,0,1] # [0,0,0,0,0] (3,4)
from collections import deque 

def solution(map):
    answer = 0
    # map = [[1,0,1,1,1],[1,0,1,0,1],[1,0,1,1,1],[1,1,1,0,1]]
    m = len(map) # 열
    n = len(map[0]) # 행
    visited = [[0 for j in range(n)] for i in range(m)]
    road = [[m-1,n-1]]
    # answer = check, road
    count = 0
    road_dq = deque(road)
    while(road_dq):
        count +=1
    
        for i in range(len(road_dq)):
        
            x, y = road_dq.popleft() 
            if(visited[x][y] == 1):
                continue
            map[x][y] = 0
            visited[x][y] = 1
                
            if(x == 0 and y ==0):
                return count

            # 왼쪽
            if(y-1>-1 and map[x][y-1] == 1):
                road_dq.append([x,y-1])
            # 오른쪽
            if(y+1<n and map[x][y+1] == 1):
                road_dq.append([x,y+1])
            # 위쪽
            if(x-1>-1 and map[x-1][y] == 1):
                road_dq.append([x-1,y])
            #아래쪽
            if(x+1<m and map[x+1][y] == 1):
                road_dq.append([x+1,y])
        print(road_dq)
    return -1
